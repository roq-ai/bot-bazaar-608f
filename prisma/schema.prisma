generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model ai_tool {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String      @db.VarChar(255)
  description  String?     @db.VarChar(255)
  version      String      @db.VarChar(255)
  developer_id String      @db.Uuid
  created_at   DateTime    @default(now()) @db.Timestamp(6)
  updated_at   DateTime    @default(now()) @db.Timestamp(6)
  user         user        @relation(fields: [developer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  favorites    favorites[]
}

model favorites {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id             String           @db.Uuid
  software_product_id String           @db.Uuid
  ai_tool_id          String           @db.Uuid
  plugin_id           String           @db.Uuid
  created_at          DateTime         @default(now()) @db.Timestamp(6)
  updated_at          DateTime         @default(now()) @db.Timestamp(6)
  ai_tool             ai_tool          @relation(fields: [ai_tool_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  plugin              plugin           @relation(fields: [plugin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  software_product    software_product @relation(fields: [software_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user                user             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model plugin {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String      @db.VarChar(255)
  description  String?     @db.VarChar(255)
  version      String      @db.VarChar(255)
  developer_id String      @db.Uuid
  created_at   DateTime    @default(now()) @db.Timestamp(6)
  updated_at   DateTime    @default(now()) @db.Timestamp(6)
  favorites    favorites[]
  user         user        @relation(fields: [developer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model software_product {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String      @db.VarChar(255)
  description  String?     @db.VarChar(255)
  version      String      @db.VarChar(255)
  developer_id String      @db.Uuid
  created_at   DateTime    @default(now()) @db.Timestamp(6)
  updated_at   DateTime    @default(now()) @db.Timestamp(6)
  favorites    favorites[]
  user         user        @relation(fields: [developer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  ai_tool          ai_tool[]
  favorites        favorites[]
  organization     organization[]
  plugin           plugin[]
  software_product software_product[]
}
